#
# User-defined substitutions:
#   _CLOUDSDK_COMPUTE_ZONE
#   _CLOUDSDK_CONTAINER_CLUSTER
#   _GITHUB_USERNAME
#   _KMS_KEY
#   _KMS_KEYRING
#

steps:
  # Generate a kubeconfig file
  - name: "gcr.io/cloud-builders/gcloud"
    env:
      - "CLOUDSDK_COMPUTE_ZONE=${_CLOUDSDK_COMPUTE_ZONE}"
      - "CLOUDSDK_CONTAINER_CLUSTER=${_CLOUDSDK_CONTAINER_CLUSTER}"
      - "KUBECONFIG=/kube/config"
    entrypoint: "sh"
    args:
      - "-c"
      - |
        CLUSTER=$$(gcloud config get-value container/cluster)
        PROJECT=$$(gcloud config get-value core/project)
        ZONE=$$(gcloud config get-value compute/zone)

        gcloud container clusters get-credentials "$${CLUSTER}" \
          --project "$${PROJECT}" \
          --zone "$${ZONE}"
    volumes:
      - name: "kube"
        path: /kube

  # Retrieve and decrypt the GitHub Hub configuration.
  - name: "gcr.io/cloud-builders/gcloud"
    entrypoint: "sh"
    args:
      - "-c"
      - |
        gsutil cp gs://hov-bucket/hub.enc hub.enc

        gcloud kms decrypt \
          --ciphertext-file=hub.enc \
          --plaintext-file=/config/hub \
          --location=global \
          --keyring=${_KMS_KEYRING} \
          --key=${_KMS_KEY}
    volumes:
      - name: "config"
        path: /config

  # Update the Kubernetes deployment config.
  - name: "gcr.io/cloud-builders/gcloud"
    env:
      - "KUBECONFIG=/kube/config"
    entrypoint: "sh"
    args:
      - "-c"
      - |
        kubectl apply -R -f kubernetes
    volumes:
      - name: "kube"
        path: /kube

  - name: "gcr.io/${PROJECT_ID}/hub"
    env:
      - "HUB_CONFIG=/config/hub"
      - "KUBECONFIG=/kube/config"
    entrypoint: "sh"
    args:
      - "-c"
      - |
        CONTAINER_IMAGE=$(kubectl apply --dry-run \
           -f kubernetes/deployments/backend.yaml \
           -o jsonpath='{.spec.template.spec.containers[?(@.name == "koa-backend")].image}')

        FRONTEND_CONTAINER_IMAGE=$(kubectl apply --dry-run \
           -f kubernetes/deployments/frontend.yaml \
           -o jsonpath='{.spec.template.spec.containers[?(@.name == "koa-frontend")].image}')

        ACTIVE_ACCOUNT=$(gcloud auth list --filter=status:ACTIVE --format="value(account)")

        hub config --global credential.https://github.com.helper /usr/local/bin/hub-credential-helper
        hub config --global hub.protocol https
        hub config --global user.email "$${ACTIVE_ACCOUNT}"
        hub config --global user.name "Google Container Builder"

        hub clone "https://github.com/${_GITHUB_USERNAME}/basic-app-infrastructure-production.git"

        cat <<EOF > backend-patch.yaml
        spec:
          template:
            spec:
              containers:
                - name: koa-backend
                  image: $${CONTAINER_IMAGE}
        EOF

        cat <<EOF > frontend-patch.yaml
        spec:
          template:
            spec:
              containers:
                - name: koa-frontend
                  image: $${FRONTEND_CONTAINER_IMAGE}
        EOF

        kubectl patch --local -o yaml \
          -f basic-app-infrastructure-production/kubernetes/deployments/backend.yaml \
          -p "$(cat backend-patch.yaml)" \
          > backend.yaml

        kubectl patch --local -o yaml \
          -f basic-app-infrastructure-production/kubernetes/deployments/frontend.yaml \
          -p "$(cat frontend-patch.yaml)" \
          > frontend.yaml

        mv backend.yaml basic-app-infrastructure-production/kubernetes/deployments/backend.yaml

        mv frontend.yaml basic-app-infrastructure-production/kubernetes/deployments/frontend.yaml

        cd basic-app-infrastructure-production

        git checkout -b update-deployment-${BUILD_ID}

        hub add kubernetes/deployments/backend.yaml

        hub add kubernetes/deployments/frontend.yaml

        hub commit -F- <<EOF
        Update the backend deployment ${SHORT_SHA}

        This commit updates the backend & frontend deployment container image to:

            $${CONTAINER_IMAGE} & $${FRONTEND_CONTAINER_IMAGE}

        Build ID: ${BUILD_ID}
        EOF

        hub push origin update-deployment-${BUILD_ID}


        hub pull-request -F- <<EOF
        Update the backend & frontend deployment

        This commit updates the backend & frontend deployment container image to:

            $${CONTAINER_IMAGE} && $${FRONTEND_CONTAINER_IMAGE}

        Build ID: ${BUILD_ID}
        EOF
    volumes:
      - name: "config"
        path: /config
      - name: "kube"
        path: /kube
